---
- name: Check if Docker packages are installed
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  ignore_errors: true
  register: docker_packages_is_present

- name: Install required packages
  when:
    - docker_packages_is_present is failed
  become: true
  ansible.builtin.apt:
    autoclean: yes
    autoremove: yes
    update_cache: yes
    name:
      - ca-certificates
      - curl
    state: latest

- name: Uninstall old versions of Docker
  when:
    - docker_packages_is_present is failed
  become: true
  ansible.builtin.apt:
    autoremove: yes
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - podman-docker
      - containerd
      - runc
    state: absent

- name: Create keyrings directory
  when:
    - docker_packages_is_present is failed
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key
  when:
    - docker_packages_is_present is failed
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Print the architecture of the system
  ansible.builtin.command:
    cmd: dpkg --print-architecture
  register: dpkg_print_architecture
  changed_when: false

- name: Add Docker repository
  when:
    - docker_packages_is_present is failed
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ dpkg_print_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install Docker packages
  become: true
  ansible.builtin.apt:
    autoclean: yes
    autoremove: yes
    update_cache: yes
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
  notify:
    - Configure the container runtime
    - Restart the Docker daemon

- name: Check if NVIDIA Container Toolkit is installed
  ansible.builtin.apt:
    name:
      - nvidia-container-toolkit
    state: present
  ignore_errors: yes
  register: nvidia_container_toolkit_is_present

- name: Download NVIDIA container GPG key
  when:
    - nvidia_container_toolkit_is_present is failed
  become: true
  ansible.builtin.get_url:
    url: https://nvidia.github.io/libnvidia-container/gpgkey
    dest: /usr/share/keyrings/nvidia-container-toolkit-keyring.asc
    mode: '0644'

- name: Download NVIDIA Container Toolkit repository file
  when:
    - nvidia_container_toolkit_is_present is failed
  become: true
  ansible.builtin.uri:
    url: https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list
    return_content: yes
  register: nvidia_container_toolkit_list

- name: Modify and add NVIDIA Container Toolkit repository
  when:
    - nvidia_container_toolkit_is_present is failed
    - item | regex_search('^deb https://')
  become: true
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/nvidia-container-toolkit.list
    line: "deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.asc] https://{{ item.split('https://')[1] }}"
    create: yes
    state: present
  loop: "{{ nvidia_container_toolkit_list.content.split('\n') }}"

- name: Install NVIDIA Container Toolkit
  become: true
  ansible.builtin.apt:
    autoclean: yes
    autoremove: yes
    update_cache: yes
    name:
      - nvidia-container-toolkit
    state: latest
  notify:
    - Configure the container runtime
    - Restart the Docker daemon

- name: Start and enable Docker
  become: true
  ansible.builtin.systemd:
    name: docker
    state: started
    daemon_reload: yes
    enabled: yes

- name: Add users to %docker
  when:
    - docker_user_names is defined
  become: true
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: yes
  with_items: "{{ docker_user_names }}"
